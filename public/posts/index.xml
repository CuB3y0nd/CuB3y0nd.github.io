<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>所有文章 - CuB3y0nd&#39;s Blog</title>
    <link>https://www.cubeyond.net/posts/</link>
    <description>所有文章 | CuB3y0nd&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>root@cubeyond.net (CuB3y0nd)</managingEditor>
      <webMaster>root@cubeyond.net (CuB3y0nd)</webMaster><lastBuildDate>Fri, 18 Aug 2023 19:45:43 &#43;0800</lastBuildDate><atom:link href="https://www.cubeyond.net/posts/" rel="self" type="application/rss+xml" /><item>
  <title>[置顶] 博客站点说明</title>
  <link>https://www.cubeyond.net/announcement-about-my-blog/</link>
  <pubDate>Sat, 05 Aug 2023 07:04:28 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/announcement-about-my-blog/</guid>
  <description><![CDATA[<blockquote>
<p>关于本博客</p>
</blockquote>]]></description>
</item>
<item>
  <title>Pwntools Cheetsheet</title>
  <link>https://www.cubeyond.net/pwntools-cheetsheet/</link>
  <pubDate>Fri, 18 Aug 2023 19:45:43 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/pwntools-cheetsheet/</guid>
  <description><![CDATA[<p>这篇博客记录了 <code>pwntools</code> 库中一些实用的功能。</p>]]></description>
</item>
<item>
  <title>ret2libc</title>
  <link>https://www.cubeyond.net/ret2libc/</link>
  <pubDate>Fri, 18 Aug 2023 10:43:24 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/ret2libc/</guid>
  <description><![CDATA[<p>ret2libc 基于 C 标准库中的 <code>system</code> 函数。该函数会执行传递给它的任何内容，
这使其成为最佳攻击目标。libc 中的另一个内容是字符串 <code>/bin/sh</code> ；如果你将
此字符串传递给 <code>system</code> 函数，它会弹出一个 shell。</p>
<p>这就是它的全部内容——将 <code>/bin/sh</code> 作为参数传递给 <code>system</code> 。</p>]]></description>
</item>
<item>
  <title>攻击调用约定</title>
  <link>https://www.cubeyond.net/exploiting-calling-conventions/</link>
  <pubDate>Fri, 11 Aug 2023 15:31:21 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/exploiting-calling-conventions/</guid>
  <description><![CDATA[<p>利用调用约定。</p>]]></description>
</item>
<item>
  <title>Gadgets</title>
  <link>https://www.cubeyond.net/gadgets/</link>
  <pubDate>Fri, 11 Aug 2023 10:56:47 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/gadgets/</guid>
  <description><![CDATA[<p>Gadgets 是一小段后跟 <code>ret</code> 指令的代码。例如：<code>pop rdi; ret</code> 。我们可以操纵这些
gadgets 的 <code>ret</code> ，将它们串成一个链来完成我们想要做的事情。</p>]]></description>
</item>
<item>
  <title>环、域和欧拉函数</title>
  <link>https://www.cubeyond.net/rings-fields-and-eulers-totient-function/</link>
  <pubDate>Thu, 10 Aug 2023 19:48:11 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/rings-fields-and-eulers-totient-function/</guid>
  <description><![CDATA[<p>环、域和欧拉函数 $\varphi$ 的基础知识</p>]]></description>
</item>
<item>
  <title>模运算</title>
  <link>https://www.cubeyond.net/modular-arithmetic/</link>
  <pubDate>Thu, 10 Aug 2023 15:28:19 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/modular-arithmetic/</guid>
  <description><![CDATA[<p>模运算基础知识简介</p>]]></description>
</item>
<item>
  <title>可除性，因数和欧几里得算法</title>
  <link>https://www.cubeyond.net/divisibility-factors-and-euclids-algorithms/</link>
  <pubDate>Thu, 10 Aug 2023 10:47:09 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/divisibility-factors-and-euclids-algorithms/</guid>
  <description><![CDATA[<p>密码学建立在代数和数论的基础上，我希望在这里能充分介绍它们。</p>]]></description>
</item>
<item>
  <title>调用约定</title>
  <link>https://www.cubeyond.net/calling-conventions/</link>
  <pubDate>Wed, 09 Aug 2023 10:16:36 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/calling-conventions/</guid>
  <description><![CDATA[<p>这篇文章将对 32-bit 和 64-bit 的调用约定进行更为深入的探讨。</p>]]></description>
</item>
<item>
  <title>面向返回编程简介</title>
  <link>https://www.cubeyond.net/return-oriented-programming/</link>
  <pubDate>Tue, 08 Aug 2023 22:03:44 &#43;0800</pubDate>
  <author>CuB3y0nd</author>
  <guid>https://www.cubeyond.net/return-oriented-programming/</guid>
  <description><![CDATA[<p>ROP 的基础是将二进制文件文件本身中已经存在的代码块链接在一起，以便执行你想要
的操作。这通常涉及将参数传递给 <code>libc</code> 中已经存在的函数，例如 <code>system()</code> 。如果你
可以找到命令的位置，例如 <code>cat flag.txt</code>，然后将其 <em>作为参数</em> 传递给 <code>system()</code> 函数，
它将执行该命令并返回输出。一个更危险的命令是 <code>/bin/sh</code>，当 <code>system()</code> 运行它时，
它会为攻击者提供一个 shell，就像我们使用的 shellcode 一样。</p>
<p>然而，这样做并没有看起来那么简单。为了能够正确调用函数，我们首先必须了解如何
向函数传递参数。</p>]]></description>
</item>
</channel>
</rss>
